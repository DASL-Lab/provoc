% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/provoc_jags.R
\name{provoc_jags}
\alias{provoc_jags}
\title{Estimate a Bayesian model for \eqn{\rho}.}
\usage{
provoc_jags(
  coco,
  varmat,
  adapt = 500,
  burnin = 1000,
  thin = 4,
  sample = 1000,
  n.chains = 3,
  quiet = TRUE,
  summarise = FALSE,
  return_df = TRUE
)
}
\arguments{
\item{coco}{A data frame containing counts, coverage, and mutation names}

\item{varmat}{The variant matrix to be used in the study. The rownames must be the VoCs and the colnames must be the mutation names (in the same format as the mutation names in \code{coco})}

\item{adapt, burnin, sample, thin}{Parameters passed to runjags. Note that \code{sample} is the final number of samples that you will receive from each chain (i.e. if \code{thin = 5} and \code{sample = 1000}, you will end up drawing 5000 samples so that 1000 are returned after thinning).}

\item{quiet}{If TRUE, much (but not all) of the runjags output will be suppressed.}

\item{return_df}{If TRUE, returns a df with the summary statistics. \code{convergence(res)} will return the convergence information.}
}
\value{
an mcmc.list object with each column representing the proportion of the variant of concern, in the order of the rownames of variantmat. It is suggested to use melt_mcmc to get output that plays better with ggplot2 and dplyr.
}
\description{
Fits \eqn{counts_i \sim Binom(p_i, coverage_i)}, where \eqn{p_i} is \eqn{\rho} (the vector of proportions for each variant) times the column of the variant matrix corresponding to the \eqn{i}th mutation. In other words, \eqn{p_i} is the sum of the proportions of the variants that contain mutation i.
}
\examples{
varmat <= simulate_varmat()
coco <- simulate_coco(varmat, rel_counts = c(100, 200, 300))

coda <- coda_binom(coco, varmat)
codf <- melt_mcmc(coda, pivot = FALSE)

plot(x = codf$iter, y = codf[, 1], col = codf$chain)

}
